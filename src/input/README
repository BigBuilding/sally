
Sally - A Tool for Embedding Strings in Vector Spaces
Copyright (C) 2010 Konrad Rieck (konrad@mlsec.org)
--

Development of Input Modules

  Sally can be easily extended to support different formats of strings. The
  development of a new input module involves three steps:
  
  1) Create the source files 'input_xxx.c' and 'input_xxx.h' for the new 
     input module xxx.  Add these files to 'Makefile.am' to include them in
     the compilation process of Sally.
  
  2) Implement four functions in 'input_xxx.c' and add respective
     declarations of these functions to 'input_xxx.h'. 
           
     int input_xxx_open(char *name);
     
     This function opens the input source for reading of strings. For
     example, if 'xxx' refers to an archive, this functions corresponds to
     opening the archive and preparing it for loading its entries. The
     function return 1 on success and 0 on failure.
     
     int input_xxx_read(char **strs, int *sizes, char **desc, int len);
     
     This function reads a block of strings. The parameter 'strs' is used to
     store the loaded strings, 'sizes' is an array for the lengths of the
     strings, and 'desc' an array of descriptions.  The provided arrays need
     to be allocated by the caller, where their length is given in 'len'. 
     The function returns the number of loaded strings; 0 indicates the end
     of the input source.
       
     void input_xxx_close();
     
     This function closes the input source for the format xxx. Memory
     allocated by input_xxx_open() should be freed here. Open files  
     and similar objects should be closed.
     
     float input_xxx_desc2label(char *desc);
     
     This convenience function converts a description into a label.  It is
     used to extract labels as floating point number from the descriptions
     obtained through input_xxx_read().  If no labels are contained in the
     descriptions, this function should return 0.
    
  3) Integrate the new interface into Sally by extending the code in
     'input.c'. First, add 'input_xxx.h' to the list of included headers
     and, second, extend the function input_config() to initialize the new
     input format if requested.
     
  That's it. Please send new input modules to konrad@mlsec.org, so that 
  they can be considered for the next release of Sally.
  